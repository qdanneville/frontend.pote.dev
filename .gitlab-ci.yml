image:
  name: docker/compose:1.27.4

services:
  - docker:dind

stages:
  - build
#  - deploy

variables:
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - "which ssh-agent || (apk update && apk add openssh)"
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
  - chmod 700 ~/.ssh/id_rsa
  - eval "$(ssh-agent -s)"
  - ssh-add ~/.ssh/id_rsa
  - ssh-keyscan -H 'gitlab.com' >> ~/.ssh/known_hosts
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - chmod 644 ~/.ssh/known_hosts
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    - docker-compose up --build -d
    - docker push nextjs
    - docker push nginx

#deploy:
#  stage: deploy
#  script:
#     - ls
#    - scp -r ./.env ./nginx/nginx.conf ./docker-compose.yml $SSH_USER@$SSH_SERVER:/app
#    - docker pull nextjs
#    - docker pull nginx
#    - docker-compose --verbose -H "ssh://potedev@85.208.144.169" up --build -d